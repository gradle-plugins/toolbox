import static dev.gradleplugins.GradleRuntimeCompatibility.*

plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.3.72"
    id 'java-test-fixtures'
    id 'maven-publish'
}
apply plugin: 'dev.gradleplugins.java-gradle-plugin'
apply plugin: 'dev.gradleplugins.gradle-plugin-unit-test'
apply plugin: 'dev.gradleplugins.gradle-plugin-functional-test'

version = '1.1.35'

gradlePlugin {
    plugins {
        javaGradlePlugin {
            id = 'dev.gradleplugins.java-gradle-plugin'
            implementationClass = 'dev.gradleplugins.internal.plugins.JavaGradlePluginDevelopmentPlugin'
        }
        groovyGradlePlugin {
            id = 'dev.gradleplugins.groovy-gradle-plugin'
            implementationClass = 'dev.gradleplugins.internal.plugins.GroovyGradlePluginDevelopmentPlugin'
        }
        gradlePluginDevelopment {
            id = 'dev.gradleplugins.gradle-plugin-development'
            implementationClass = 'dev.gradleplugins.internal.plugins.GradlePluginDevelopmentPlugin'
        }
        unitTest {
            id = 'dev.gradleplugins.gradle-plugin-unit-test'
            implementationClass = 'dev.gradleplugins.internal.plugins.GradlePluginDevelopmentUnitTestingPlugin'
        }
        functionalTest {
            id = 'dev.gradleplugins.gradle-plugin-functional-test'
            implementationClass = 'dev.gradleplugins.internal.plugins.GradlePluginDevelopmentFunctionalTestingPlugin'
        }
    }
    compatibility {
        minimumGradleVersion = project.minimumGradleVersion
    }
    java {
        withSourcesJar()
        withJavadocJar()
    }
}

repositories {
    mavenCentral()

    // For gradle-fixtures
    jcenter() {
        mavenContent { includeGroup("net.rubygrapefruit") }
    }
}

test {
    dependencies {
        implementation spockFramework()
        implementation groovy()
    }
}

functionalTest {
    testTasks.configureEach {
        dependsOn(':gradle-fixtures:publishAllPublicationsToLocalRepositoryRepository')
        it.systemProperty('localRepository', layout.buildDirectory.dir('repository').get().asFile)
    }
    testingStrategies = [strategies.coverageForMinimumVersion, strategies.coverageForLatestGlobalAvailableVersion]
    dependencies {
        implementation spockFramework()
        implementation gradleTestKit()
        implementation groovy()
        implementation testFixtures(project(':gradle-plugin-development'))
    }
}

dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation 'org.apache.commons:commons-lang3:3.5'
    implementation 'com.google.code.gson:gson:2.8.6'
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // Force local fixtures
    // TODO: Maybe look into dependency substitution
    functionalTestImplementation(project(':gradle-fixtures')) {
        capabilities {
            requireCapability("dev.gradleplugins:gradle-fixtures-spock-support:${project(':gradle-fixtures').version}")
        }
    }

    testFixturesCompileOnly gradleApi(minimumGradleVersion)
    testFixturesApi project(':gradle-fixtures-source-elements')
    testFixturesImplementation project(':gradle-fixtures')
    testFixturesImplementation(project(':gradle-fixtures')) {
        capabilities {
            requireCapability("dev.gradleplugins:gradle-fixtures-spock-support:${project(':gradle-fixtures').version}")
        }
    }
    testFixturesImplementation "org.codehaus.groovy:groovy-all:${groovyVersionOf(minimumGradleVersion)}"
}

tasks.register('release') {
    dependsOn('publishAllPublicationsToNokeeReleaseRepository')
}