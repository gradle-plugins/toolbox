plugins {
    id 'io.github.gradle-nexus.publish-plugin' version '1.0.0'
}

allprojects {
    group = 'dev.gradleplugins'
}
version = '1.3'

// Configure javadoc
allprojects {
    pluginManager.withPlugin('java') {
        tasks.named('javadoc', Javadoc) {
            exclude('**/internal/**')
        }
    }
}

// Configure gradle-fixtures-* versions
subprojects {
    if (project.name.startsWith('gradle-fixtures') || project.name.startsWith('gradle-runner-kit')) {
        version = '0.0.124'
    }
}

nexusPublishing {
    repositories {
        sonatype()
    }
}

def releaseTask = tasks.register('release') {
    dependsOn('publishToSonatype', 'closeAndReleaseSonatypeStagingRepository')
}
subprojects {
    pluginManager.withPlugin('maven-publish') {
        releaseTask.configure { dependsOn('publishToSonatype')}
    }
    pluginManager.withPlugin('com.gradle.plugin-publish') {
        releaseTask.configure { dependsOn('publishPlugins') }
    }
}